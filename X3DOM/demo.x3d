<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Immersive' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
    <!-- The scene is like the HTML body tag, it defines the visual content -->
    <Scene>
        
        <!--     World Meta Data, Background colour is in Generic Decimal colour format     -->
        <WorldInfo title='Demo Land' />
		<Background skyColor='0.000, 0.662, 0.949' />
        
        <!--     The players view position     -->
        <Viewpoint position="43.13747 9.08974 -68.82131" orientation="0.06506 0.99585 0.06369 2.39221" centerOfRotation="0.00000 0.00000 0.00000" fieldOfView="0.78540" description=""></Viewpoint>
        <!--     How the player moves within the world, there are a number of options     -->
	    <navigationInfo type='"LOOKAT"' headlight='false' speed='0.5' avatarSize='120' ></navigationInfo>
		
        <!--     Objects in the world     -->
        <!--     Transform tags are like divs, they allow us to position and manipulate everything within them     -->
        <Transform DEF='WORLD' translation='0 0 0' >
            
            <!--     This is an example of loading a model from a separate file     -->
                              <transform translation='7 -2 0' scale="2.5 2.5 2.5" >
                <inline id="deerInline" url='Deer.x3d' nameSpaceName="Deer" onclick='change()' mapDEFToID="true" />
            </transform>
                <transform translation='10 -2 0' scale="1 1 1">
                <inline id="deerInline" url='bird.x3d' nameSpaceName="Deer" onclick='change()' mapDEFToID="true" />
            </transform>
            <Transform translation='0 -25 0' scale="1 1 1" DEF='hill'>
                <!-- How to load other X3D files -->                
                <inline url='assets/hill.x3d' /> 
            </Transform>
            
            <!--     This is an example of a generic object and an image being rendered onto it     -->
            <Transform translation='0 -10 0' DEF='water'>
                <Shape>
                    <Box size='500 0.1 500' />
                    <Appearance>
                        <ImageTexture url='assets/water.jpg'/>
                    </Appearance>
                </Shape>
            </Transform>
            
            <!-- An example of adding a javascript click function to an object -->            
            <Transform translation='0 0 0' >
                <Shape onclick="txtDisplay('You have clicked the orb!');">
                    <Sphere radius='5' /> 
                </Shape>
            </Transform>
            
              
        </Transform>
        <!-- An example of how to add sound! -->                
        <Sound>
            <AudioClip loop='true' enabled="true" url='assets/auldlangsyne.mp3'/>    
        </Sound>
        
		<!--   +++++  Animations, they require 3 parts  ++++   -->
        <!--     A time sensor is like a clock, it ticks away and defines some time     -->
        <TimeSensor DEF='NORMAL_TIMER' cycleInterval='100' loop='true' />
        
        <!--     The interpolator is the animation, it is the key frames the animation     -->
        <OrientationInterpolator DEF='SPIN_ME' key='0.00 0.25 0.50 0.75 1.00' keyValue='0 1 0 0 0 1 0 1.57079 0 1 0 3.14159 0 1 0 4.7123889 0 1 0 6.2831852' />


        <!--     Finally you need to connect the timer and the keyframes     -->
        <ROUTE fromNode='NORMAL_TIMER' fromField='fraction_changed' toNode='SPIN_ME' toField='set_fraction'/>
        <ROUTE fromNode='SPIN_ME' fromField='value_changed' toNode='WORLD' toField='rotation'/>
        <!-- ALERT the world has been animated to spin, you may wish to remove this if your editing this file!!! -->        
		
  <!-- Timer to drive the animation -->
<TimeSensor DEF="HEARTBEAT_TIMER" cycleInterval="5" loop="true"/>

<!-- PositionInterpolator for up-and-down motion -->
<PositionInterpolator DEF="HEARTBEAT_MOTION"
  key="0.0 0.25 0.5 0.75 1.0"
  keyValue="0 -25 0 
            0 -24.8 0 
            0 -25 0 
            0 -24.85 0 
            0 -25 0"/>

<!-- Route the timer to the interpolator -->
<ROUTE fromNode="HEARTBEAT_TIMER" fromField="fraction_changed" toNode="HEARTBEAT_MOTION" toField="set_fraction"/>

<!-- Route the interpolator to the 3D element's translation field -->
<ROUTE fromNode="HEARTBEAT_MOTION" fromField="value_changed" toNode="hill" toField="translation"/>
    </Scene>
</X3D>

